1. Check out the code reviewer guidelines for software engineers at Yelp and Microsoft (Visual Studio Mobile team). 
What concepts are similar between the companies (List at least two)? What are some key differences (List at least two)? 
In general, what items should be present in a code review checklist for a development team?

Similarities:
- Both Yelp and Microsoft steers reviewers away from giving feedback on style
- Both Yelp and Microsoft want the end result to have good test coverage

Differences:
- Yelp has a focus on time it takes for the review
- Microsoft asks the reviewers to first run the code through an automated reviewer
- Microsoft reminds the reviewers to watch their tone when giving feedback
- Microsoft introduced the usage of emojis for reviewers

Items that should be present for a code review checklist:
- Check that the code runs as intended
- Ensure that code solves the problem intended
- Ensure that there are enough test coverage
- Critcize the code not the coder

2. Find an example of a "good" code review. Provide a link to the review and explain why you found the review beneficial.
Here is a good code review: https://codereview.stackexchange.com/questions/291416/an-arena-bump-allocator-in-c. The reason
we believe this is a good review is because the poster did not simply post their code and ask for suggestions. The explained exactly
what the want to create, the mechanisms that they used to create them, examples, and then asked specific questions along with suggestions
for improvement.

3. Find an example of a "bad" code review. Provide a link to the review and briefly explain why you found the review not beneficial.
In addition, include recommendations for improvement to the review feedback.
We thought this was a bad code review: https://codereview.stackexchange.com/questions/291316/how-to-manage-array-of-states-effectively.
We said this because the code itself is missing comments there is not much explanantion in the post about what the code does and what it
is trying to accomplish.